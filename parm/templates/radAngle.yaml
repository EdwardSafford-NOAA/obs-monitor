# RadMon Angle plot performs the following:
#   1.  Load binary monitor data for 120 cycles
#   2.  Generate angle plots with 1 day, 1 week, and 30 day spans for:
#         number of obs 
#         penalty
#         omgnbc
#         total bias correction
#         omgbc
#         lapse
#         lapse2
#         const (mean correction)
#         emiss
#         ordang1
#         ordang2
#         ordang3
#         ordang4
#
#   Note that fixang, scangl, clw, cos, and sin, which are available in the binary
#   files are not included in this plot script.  Presently they are all zero values
#   so there is no need to add the extra processing time.  This script is slow enough
#   as is.
#
#   With this script in particular it's worth considering how much of what this plots 
#   is really useful as a routinely available plot and how much belongs in a script 
#   to be used for more in-depth investigations.
#
#   Also I'll need to consider a means to substitute the control file variable name 
#   for the more descriptive term in plot labels (i.e. "const" = "Mean Correction").
#
#   Lastly this script does not include the sdv values for the variables.  I'm 
#   convinced the sdv values in the existing RadMon angle plots are wrong.  That
#   can be addressed/fixed when we replace the DA monitor data extraction mechanism.
#  

diagnostics:

# Data read
# ---------
datasets:
  - name: angle
    satellite: {{SAT}}
    sensor: {{SENSOR}}
    type: MonDataSpace
    control_file:
      - {{DATA}}/angle.{{SENSOR}}_{{SAT}}.ctl
    filenames:
      {% for i in range(0, 720, 6) %}
      {% set offset_hr = i | string %}
      {% set offset_str = "-" + offset_hr + "H" %}
      {% set offset_td = offset_str | to_timedelta %}
      {% set PDATEnew = PDATE | add_to_datetime(offset_td) %}
      - {{ DATA }}/angle.{{ SENSOR }}_{{ SAT }}.{{ PDATEnew | to_YMDH }}.ieee_d
      {% endfor %}

    channels: {{CHANNELS}}
    regions: &regions 1
    groups:
      - name: GsiIeee
        variables: &variables ['penalty', 'omgnbc', 'omgbc', 'total', 'lapse', 'lapse2', 'const', 'emiss', 'ordang1', 'ordang2', 'ordang3', 'ordang4']


transforms:

  - transform: accept where
    new name: angle::GsiIeee::count_1
    starting field: angle::GsiIeee::count
    where:
      - angle::GsiIeee::count > 0
    for:
      variable: [none]

  - transform: select time
    new name: angle::GsiIeee::count_1d
    starting field: angle::GsiIeee::count_1
    start cycle: {{ PDATE | to_YMDH }}
    end cycle: {{ PDATEm18 | to_YMDH }}
    for:
      variable: [none]

  - transform: select time
    new name: angle::GsiIeee::count_7d
    starting field: angle::GsiIeee::count_1
    start cycle: {{ PDATE | to_YMDH }}
    end cycle: {{ PDATEm168 | to_YMDH }}
    for:
      variable: [none]

  - transform: select time
    new name: angle::GsiIeee::count_30d
    starting field: angle::GsiIeee::count_1
    start cycle: {{ PDATE | to_YMDH }}
    end cycle: {{ PDATEm720 | to_YMDH }}
    for:
      variable: [none]

  - transform: arithmetic
    new name: angle::GsiIeee::${variable}_avg
    equals: angle::GsiIeee::${variable}/angle::GsiIeee::count_1
    for:
      variable: *variables

  - transform: select time
    new name: angle::GsiIeee::${variable}_avg_1d
    starting field: angle::GsiIeee::${variable}_avg
    start cycle: {{ PDATE | to_YMDH }}
    end cycle: {{ PDATEm18 | to_YMDH }}
    for:
      variable: *variables

  - transform: select time
    new name: angle::GsiIeee::${variable}_avg_7d
    starting field: angle::GsiIeee::${variable}_avg
    start cycle: {{ PDATE | to_YMDH }}
    end cycle: {{ PDATEm168 | to_YMDH }}
    for:
      variable: *variables

  - transform: select time
    new name: angle::GsiIeee::${variable}_avg_30d
    starting field: angle::GsiIeee::${variable}_avg
    start cycle: {{ PDATE | to_YMDH }}
    end cycle: {{ PDATEm720 | to_YMDH }}
    for:
      variable: *variables


graphics:

  plotting_backend: Emcpy
  figure_list:

  # Angle plots
  # -----------
    - batch figure:
        channels: {{CHANNELS}}
        variables: ['count']

      figure:
        layout: [1,1]
        figure size: [20,18]
        title: "${variable}, {{SENSOR}}_{{SAT}} channel ${channel}  \n Valid: {{ PDATE | to_YMDH }}"
        output name: line_plots/rad/angle/angle.{{SENSOR}}_{{SAT}}.${channel}.${variable}.png
#       plot logo:
#         which: 'noaa/nws'
#         loc: 'upper left'

      plots:

        - add_xlabel: 'Scan Position'
          add_ylabel: '${variable}'
          add_legend:
            loc: 'upper right'
          add_grid:
            axis: 'both'
            linestyle: 'dotted'
            linewidth: 0.5
            color: 'black'

          layers:
          - type: LinePlot
            x:
              variable: angle::GsiIeee::scan
            y:
              variable: angle::GsiIeee::${variable}_1d
            color: 'blue'
            channel: ${channel}
            label: '1 day'

          - type: LinePlot
            x:
              variable: angle::GsiIeee::scan
            y:
              variable: angle::GsiIeee::${variable}_7d
            color: 'green'
            channel: ${channel}
            label: '1 week'

          - type: LinePlot
            x:
              variable: angle::GsiIeee::scan
            y:
              variable: angle::GsiIeee::${variable}_30d
            color: 'red'
            channel: ${channel}
            label: '30 days'

          - type: VerticalLine
            x: 0
            linewidth: 0.75
            label: ''

          - type: HorizontalLine
            y: 0
            linewidth: 0.75
            label: ''

    - batch figure:
        variables: *variables
        channels: {{CHANNELS}}
      figure:
        layout: [1,1]
        figure size: [20,18]
        title: "${variable}, {{SENSOR}}_{{SAT}} channel ${channel}  \n Valid: {{ PDATE | to_YMDH }}"
        output name: line_plots/rad/angle/angle.{{SENSOR}}_{{SAT}}.${channel}.${variable}.png
#       plot logo:
#         which: 'noaa/nws'
#         loc: 'upper left'

      plots:
        - add_xlabel: 'Scan Position'
          add_ylabel: "${variable}"
          add_legend:
            loc: 'upper right'
          add_grid:
            axis: 'both'
            linestyle: 'dotted'
            linewidth: 0.5
            color: 'black'

          layers:
          - type: LinePlot
            x:
              variable: angle::GsiIeee::scan
            y:
              variable: angle::GsiIeee::${variable}_avg_1d
            color: 'blue'
            channel: ${channel}
            label: '1 day'

          - type: LinePlot
            x:
              variable: angle::GsiIeee::scan
            y:
              variable: angle::GsiIeee::${variable}_avg_7d
            color: 'green'
            channel: ${channel}
            label: '7 days'

          - type: LinePlot
            x:
              variable: angle::GsiIeee::scan
            y:
              variable: angle::GsiIeee::${variable}_avg_30d
            color: 'red'
            channel: ${channel}
            label: '30 days'

          - type: VerticalLine
            x: 0
            linewidth: 0.75
            label: ''

          - type: HorizontalLine
            y: 0
            linewidth: 0.75
            label: ''

