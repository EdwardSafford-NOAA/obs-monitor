# RadMon bcoef time series plots for RadMon gfs
#    1.  Load binary monitor bcoef data for 120 cycles.  
#    2.  Generate time series plots for the specified files (cycle times, generally 30 days):
#          mean
#          lapse
#          lapse2
#          emiss
#          ordang1
#          ordang2
#          ordang3
#          ordang4
#
#   Note that atmpath, clw, cos, and sin, which are available in the binary
#   files are not included in this plot script.  Presently they are all zero values
#   so there is no need to add the extra processing time.  This script is slow enough
#   as is.
#
#   It's worth considering how much of what this plots is really useful as a 
#   routinely available plot and how much belongs in a script to be used for more 
#   in-depth investigations.
#
#   Also I'll need to consider a means to substitute the control file variable name
#   for the more descriptive term in plot labels (i.e. "ordang1" = "1st Order Angle").
#
#
diagnostics:

# Data read
# ---------
datasets:
  - name: bcoef
    satellite: {{SAT}}
    sensor: {{SENSOR}}
    type: MonDataSpace
    control_file:
      - {{DATA}}/bcoef.{{SENSOR}}_{{SAT}}.ctl
    filenames:
      {% for i in range(0, 726, 6) %}
      {% set offset_hr = i | string %}
      {% set offset_str = "-" + offset_hr + "H" %}
      {% set offset_td = offset_str | to_timedelta %}
      {% set PDATEnew = PDATE | add_to_datetime(offset_td) %}
      - {{ DATA }}/bcoef.{{ SENSOR }}_{{ SAT }}.{{ PDATEnew | to_YMDH }}.ieee_d
      {% endfor %}

    channels: {{CHANNELS}}
    regions: &regions 1
    groups:
      - name: GsiIeee
        variables: &variables ['mean', 'lapse', 'lapse2', 'emiss', 'ordang1', 'ordang2', 'ordang3', 'ordang4']

graphics:

  plotting_backend: Emcpy
  figure_list:

    # All defined variables
    # ---------------------
    - batch figure:
        variables: *variables
        channels: {{CHANNELS}}
      figure:
        layout: [1,1]
        figure size: [20,18]
#       tight layout:
        title: "${variable}, {{SENSOR}}_{{SAT}} channel ${channel}  \n Valid: {{ PDATE | to_YMDH }}"
        output name: line_plots/rad/bcoef/bcoef.{{SENSOR}}_{{SAT}}.${channel}.${variable}.png
#       plot logo:
#         which: 'noaa/nws'
#         loc: 'upper right'

      plots:
        - add_xlabel: 'Cycle'
          add_ylabel: "${variable}"
          layers:
          - type: LinePlot
            x:
              variable: bcoef::GsiIeee::cycle
            y:
              variable: bcoef::GsiIeee::${variable}
            color: 'blue'
            channel: ${channel}
