#
# Time series and Summary plots for RadMon gfs
#
# Generate separate 30 day time series plots for:
#   - number of obs 
#   - penalty
#   - omgnbc
#   - bias correction
#   - omgbc
#
# Generate 4 panel Summary plots

diagnostics:

# Data read
# ---------
datasets:
  - name: time
    satellite: {{SAT}}
    sensor: {{SENSOR}}
    type: MonDataSpace
    control_file:
      - {{DATA}}/time.{{SENSOR}}_{{SAT}}.ctl
    filenames:
      - {{DATA}}/time.{{SENSOR}}_{{SAT}}.{{ PDATE | to_YMDH }}.ieee_d

      {% for i in range(6, 720, 6) %}
      {% set offset_hr = i | string %}
      {% set offset_str = "-" + offset_hr + "H" %}
      {% set offset_td = offset_str | to_timedelta %}
      {% set PDATEnew = PDATE | add_to_datetime(offset_td) %}
      - {{ DATA }}/time.{{ SENSOR }}_{{ SAT }}.{{ PDATEnew | to_YMDH }}.ieee_d
      {% endfor %}

    channels: {{CHANNELS}}
    regions: &regions 1
    groups:
      - name: GsiIeee
        variables: &variables ['penalty', 'omgnbc', 'total', 'omgbc']

transforms:
  - transform: arithmetic
    new name: time::GsiIeee::${variable}_avg
    equals: time::GsiIeee::${variable}/time::GsiIeee::count
    for:
      variable: *variables

  - transform: accept where
    new name: time::GsiIeee::nassim
    starting field: time::GsiIeee::chan_nassim
    where:
      - time::GsiIeee::chan_nassim > 0
    for:
      variable: [none]

  - transform: accept where
    new name: time::GsiIeee::assim
    starting field: time::GsiIeee::chan_assim
    where:
      - time::GsiIeee::chan_assim > 0
    for:
      variable: [none]

  - transform: select time
    new name: time::GsiIeee::count_cyc1
    starting field: time::GsiIeee::count
    cycle: {{ PDATE | to_YMDH }}
    for:
      variable: [none]

  - transform: select time
    new name: time::GsiIeee::count_cyc2
    starting field: time::GsiIeee::count
    cycle: {{ PDATEm6 | to_YMDH }}
    for:
      variable: [none]

  - transform: select time
    new name: time::GsiIeee::count_cyc3
    starting field: time::GsiIeee::count
    cycle: {{ PDATEm12 | to_YMDH }}
    for:
      variable: [none]

  - transform: select time
    new name: time::GsiIeee::count_cyc4
    starting field: time::GsiIeee::count
    cycle: {{ PDATEm18 | to_YMDH }}
    for:
      variable: [none]

  # Note that total is the total bias correction for a given
  # channel/region.  To find the average divide total by count.
  - transform: arithmetic
    new name: time::GsiIeee::total_avg
    equals: time::GsiIeee::total/time::GsiIeee::count
    for:
      variable: [none]
  
  # Note that omgbc is the total omgbc for a given
  # channel/region.  To find the average divide omgbc by count.
  - transform: arithmetic
    new name: time::GsiIeee::omgbc_avg
    equals: time::GsiIeee::omgbc/time::GsiIeee::count
    for:
      variable: [none]
  
  # Single cycle total bias correction
  - transform: select time
    new name: time::GsiIeee::total_1cyc
    starting field: time::GsiIeee::total_avg
    cycle: {{ PDATE | to_YMDH }}
    for:
      variable: [none]

  # 4 cycle total bias correction using time slice
  - transform: select time
    new name: time::GsiIeee::total_1d
    starting field: time::GsiIeee::total_avg
    start cycle: {{ PDATE | to_YMDH }}
    end cycle: {{ PDATEm18 | to_YMDH }}
    for:
      variable: [none]
  
  # 120 cycle total bias correction using time slice
  - transform: select time
    new name: time::GsiIeee::total_30d
    starting field: time::GsiIeee::total_avg
    start cycle: {{ PDATE | to_YMDH }}
    end cycle: {{ PDATEm720 | to_YMDH }}
    for:
      variable: [none]
  
  # 1 day omgbc using time slice
  - transform: select time
    new name: time::GsiIeee::omgbc_1c
    starting field: time::GsiIeee::omgbc_avg
    cycle: {{ PDATE | to_YMDH }}
    for:
      variable: [none]
  
  # 30 day omgbc using time slice
  - transform: select time
    new name: time::GsiIeee::omgbc_30d
    starting field: time::GsiIeee::omgbc_avg
    start cycle: {{ PDATE | to_YMDH }}
    end cycle: {{ PDATEm720 | to_YMDH }}
    for:
      variable: [none]
  
  # Note that penalty is the total penalty for a given
  # channel/region.  To find the average divide penalty by count.
  - transform: arithmetic
    new name: time::GsiIeee::penalty_avg
    equals: time::GsiIeee::penalty/time::GsiIeee::count
    for:
      variable: [none]
  
  # 1 cycle penalty using time slice
  - transform: select time
    new name: time::GsiIeee::penalty_1c
    starting field: time::GsiIeee::penalty_avg
    cycle: {{ PDATE | to_YMDH }}
    for:
      variable: [none]
  
  # 1 day penalty using time slice
  - transform: select time
    new name: time::GsiIeee::penalty_1d
    starting field: time::GsiIeee::penalty_avg
    start cycle: {{ PDATE | to_YMDH }}
    end cycle: {{ PDATEm18 | to_YMDH }}
    for:
      variable: [none]
  
  # 30 day penalty using time slice
  - transform: select time
    new name: time::GsiIeee::penalty_30d
    starting field: time::GsiIeee::penalty_avg
    start cycle: {{ PDATE | to_YMDH }}
    end cycle: {{ PDATEm720 | to_YMDH }}
    for:
      variable: [none]
  
  - transform: arithmetic
    new name: time::GsiIeee::yaxis_100
    equals: time::GsiIeee::chan_yaxis_z + 100.0
    for:
      variable: [none]
  
  - transform: arithmetic
    new name: time::GsiIeee::yaxis_n1p5
    equals: time::GsiIeee::chan_yaxis_z + -1.5
    for:
      variable: [none]
  
  - transform: arithmetic
    new name: time::GsiIeee::yaxis_np05
    equals: time::GsiIeee::chan_yaxis_z + -0.05
    for:
      variable: [none]
  
graphics:

  plotting_backend: Emcpy
  figure_list:

    # Obs count plots
    # ---------------
    - batch figure:
        channels: {{CHANNELS}}
        variables: ['count']
        sensor: {{SENSOR}}

      figure:
        layout: [1,1]
        figure size: [20,18]
#       tight layout:
        title: "${variable}, {{SENSOR}}_{{SAT}} channel ${channel}  \n Valid: {{ PDATE | to_YMDH }}"
        output name: line_plots/rad/time/time.{{SENSOR}}_{{SAT}}.${channel}.${variable}.png
#       plot logo:
#         which: 'noaa/nws'
#         loc: 'upper right'

      plots:
        - add_xlabel: 'Cycle'
          add_ylabel: '${variable}'
          layers:
          - type: LinePlot
            x:
              variable: time::GsiIeee::cycle
            y:
              variable: time::GsiIeee::${variable}
            color: 'blue'
            channel: ${channel}


    # All defined variables
    # ---------------------
    - batch figure:
        variables: *variables
        channels: {{CHANNELS}}
      figure:
        layout: [1,1]
        figure size: [20,18]
#       tight layout:
        title: "${variable}, {{SENSOR}}_{{SAT}} channel ${channel}  \n Valid: {{ PDATE | to_YMDH }}"
        output name: line_plots/rad/time/time.{{SENSOR}}_{{SAT}}.${channel}.${variable}.png
#       plot logo:
#         which: 'noaa/nws'
#         loc: 'upper right'

      plots:
        - add_xlabel: 'Cycle'
          add_ylabel: "${variable}"
          layers:
          - type: LinePlot
            x:
              variable: time::GsiIeee::cycle
            y:
              variable: time::GsiIeee::${variable}_avg
            color: 'blue'
            channel: ${channel}

    - figure:
        layout: [4,1]
        figure size: [20,18]
#       tight layout:
        title: "Summary Plot {{SENSOR}}_{{SAT}} \n Valid: {{ PDATE | to_YMDH }}"
        output name: line_plots/rad/summary/summary.{{SENSOR}}_{{SAT}}.png
#       plot logo:
#         which: 'noaa/nws'
#         loc: 'upper center'
#         subplot_orientation: 'first'
      plots:
        # Obs counts, last 4 cycles
        # -------------------------
        - add_xlabel: 'Channel'
          add_ylabel: 'Observation Count'
          add_legend:
            loc: 'upper right'
          set_xticks: [{{XTICKS}}]  # need solution for large chan counts
          add_grid:
            axis: 'both'
            linestyle: 'dotted'
            linewidth: 0.5
            color: 'black'
          add_title:
            label: "Number of Obs Passing QC \n {{ PDATE | to_YMDH }}"
            loc: 'Left'
          layers:
          - type: LinePlot
            x:
              variable: time::GsiIeee::channel
            y:
              variable: time::GsiIeee::count_cyc1
            color: 'blue'
            label: '{{ PDATE | to_YMDH }}'

          - type: LinePlot
            x:
              variable: time::GsiIeee::channel
            y:
              variable: time::GsiIeee::count_cyc2
            color: 'green'
            label: '{{ PDATEm6 | to_YMDH }}'

          - type: LinePlot
            x:
              variable: time::GsiIeee::channel
            y:
              variable: time::GsiIeee::count_cyc3
            color: 'orange'
            label: '{{ PDATEm12 | to_YMDH }}'

          - type: LinePlot
            x:
              variable: time::GsiIeee::channel
            y:
              variable: time::GsiIeee::count_cyc4
            color: 'red'
            label: '{{ PDATEm18 | to_YMDH }}'

          - type: LinePlot
            x:
              variable: time::GsiIeee::assim
            y:
              variable: time::GsiIeee::yaxis_100
            color: 'green'
            label: 'chan assim'
            linestyle: ''
            marker: 's'
            markersize: '6'

          - type: LinePlot
            x:
              variable: time::GsiIeee::nassim
            y:
              variable: time::GsiIeee::yaxis_100
            color: 'red'
            label: 'chan not assim'
            linestyle: ''
            marker: 's'
            markersize: '6'

        # Avg total bias correction, 1 cycle, 1 day, 30 days
        # --------------------------------------------------
        - add_xlabel: 'Channel'
          add_ylabel: 'Total Bias Correction (K)'
          add_legend:
            loc: 'upper right'
          set_xticks: [{{XTICKS}}]
          set_yticks: [-1.0, -0.5, 0, 0.5, 1.0]
          add_grid:
            axis: 'both'
            linestyle: 'dotted'
            linewidth: 0.5
            color: 'black'
          add_title:
            label: "Total Bias Correction(K) \n {{ PDATE | to_YMDH }}"
            loc: 'Left'
          layers:
          - type: LinePlot
            x:
              variable: time::GsiIeee::channel
            y:
              variable: time::GsiIeee::total_1cyc
            color: 'blue'
            label: '1 cycle'

          - type: LinePlot
            x:
              variable: time::GsiIeee::channel
            y:
              variable: time::GsiIeee::total_1d
            color: 'red'
            label: '1 day'

          - type: LinePlot
            x:
              variable: time::GsiIeee::channel
            y:
              variable: time::GsiIeee::total_30d
            color: 'green'
            label: '30 days'

          - type: LinePlot
            x:
              variable: time::GsiIeee::assim
            y:
              variable: time::GsiIeee::yaxis_n1p5
            color: 'green'
            label: 'chan assim'
            linestyle: ''
            marker: 's'
            markersize: '6'

          - type: LinePlot
            x:
              variable: time::GsiIeee::nassim
            y:
              variable: time::GsiIeee::yaxis_n1p5
            color: 'red'
            label: 'chan not assim'
            linestyle: ''
            marker: 's'
            markersize: '6'

          - type: HorizontalLine
            y: 0
            linewidth: 1.0
            label: ''

        # Avg omgbc 1 cycle, 30 days
        # --------------------------
        - add_xlabel: 'Channel'
          add_ylabel: 'Obs - Ges with BC (K)'
          add_legend:
            loc: 'upper right'
          set_xticks: [{{XTICKS}}]
          add_grid:
            axis: 'both'
            linestyle: 'dotted'
            linewidth: 0.5
            color: 'black'
          add_title:
            label: "Observed - Ges with Bias Cor(K) \n {{ PDATE | to_YMDH }}"
            loc: 'Left'
          layers:
          - type: LinePlot
            x:
              variable: time::GsiIeee::channel
            y:
              variable: time::GsiIeee::omgbc_1c
            color: 'blue'
            label: '1 cycle'

          - type: LinePlot
            x:
              variable: time::GsiIeee::channel
            y:
              variable: time::GsiIeee::omgbc_30d
            color: 'red'
            label: '30 days'

          - type: LinePlot
            x:
              variable: time::GsiIeee::assim
            y:
              variable: time::GsiIeee::yaxis_np05
            color: 'green'
            label: 'chan assim'
            linestyle: ''
            marker: 's'
            markersize: '6'

          - type: LinePlot
            x:
              variable: time::GsiIeee::nassim
            y:
              variable: time::GsiIeee::yaxis_np05
            color: 'red'
            label: 'chan not assim'
            linestyle: ''
            marker: 's'
            markersize: '6'

        # Avg penalty value 1 cycle, 1 day, 30 days
        # -----------------------------------------
        - add_xlabel: 'Channel'
          add_ylabel: "Contribution to Penalty"
          add_legend:
            loc: 'upper right'
          set_xticks: [{{XTICKS}}]
          add_grid:
            axis: 'both'
            linestyle: 'dotted'
            linewidth: 0.5
            color: 'black'
          add_title:
            label: "Contribution to Penalty \n {{ PDATE | to_YMDH }}"
            loc: 'Left'
          layers:
          - type: LinePlot
            x:
              variable: time::GsiIeee::channel
            y:
              variable: time::GsiIeee::penalty_1c
            color: 'blue'
            label: '1 cycle'

          - type: LinePlot
            x:
              variable: time::GsiIeee::channel
            y:
              variable: time::GsiIeee::penalty_1d
            color: 'red'
            label: '1 day'
          - type: LinePlot
            x:
              variable: time::GsiIeee::channel
            y:
              variable: time::GsiIeee::penalty_30d
            color: 'orange'
            label: '30 days'

          - type: LinePlot
            x:
              variable: time::GsiIeee::assim
            y:
              variable: time::GsiIeee::yaxis_np05
            color: 'green'
            label: 'chan assim'
            linestyle: ''
            marker: 's'
            markersize: '6'

          - type: LinePlot
            x:
              variable: time::GsiIeee::nassim
            y:
              variable: time::GsiIeee::yaxis_np05
            color: 'red'
            label: 'chan not assim'
            linestyle: ''
            marker: 's'
            markersize: '6'

